openapi: 3.0.0
info:
  title: Spoonfeed Test Application API
  description: API for Spoonfeed Test Application API
  version: 1.0.0
servers:
  - url: http://localhost:9090
paths:
  /api/task:
    get:
      summary: Returns a list of tasks.
      tags:
        - Task api
      responses:
        '200':
          description: A JSON array of tasks
    post:
      summary: Creates a new task
      tags:
        - Task api
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: TaskObject
              properties:
                name:
                  type: string
                categoryId:
                  type: string
            example:
              name: Alice
              categoryId: example123_id
              completed: false
              createdAt: 20-03-2019
      responses:
        '200':
          description: Created
  /api/task/updateComplete/{id}:
    patch:
      summary: Update flag complete task.
      tags:
        - Task api
      parameters:
        - name: id
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: TaskObject
              properties:
                completed:
                  type: boolean
            example:
              completed: true
      responses:
        '200':
          description: Updated
  /api/task/updateContent/{id}:
    patch:
      summary: Update content task.
      tags:
        - Task api
      parameters:
        - name: id
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: TaskObject
              properties:
                name:
                  type: string
                categoryId:
                  type: string
            example:
              name: Hello world!
              categoryId: 23jkgj2kg35lgmk53
      responses:
        '200':
          description: Updated
  /api/task/{id}:
    delete:
      summary: Deletes task by id.
      tags:
        - Task api
      parameters:
        - name: id
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Deleted
  /api/category:
    get:
      summary: Returns a list of categories.
      tags:
        - Category api
      responses:
        '200':
          description: A JSON array of categories
    post:
      summary: Creates a new category
      tags:
        - Category api
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: CategoryObject
              properties:
                name:
                  type: string
            example:
              name: Books
      responses:
        '200':
          description: Created
  /api/category/{id}:
    patch:
      summary: Update category.
      tags:
        - Category api
      parameters:
        - name: id
          in: path
          description: ID of category
          required: true
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: CategoryObject
              properties:
                name:
                  type: string
            example:
              name: Looks
      responses:
        '200':
          description: Updated
    delete:
      summary: Deletes category by id.
      tags:
        - Category api
      parameters:
        - name: id
          in: path
          description: ID of category
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Deleted
